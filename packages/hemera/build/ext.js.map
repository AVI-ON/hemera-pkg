{"version":3,"sources":["../lib/ext.js"],"names":["Ext","type","_handler","_type","handler","push","handlers","concat","ctx","cb","each","ext","next","bind","call","serial","module","exports"],"mappings":";;;;AAEA;;;;;;AAMA;;;;;;;;AAEA;;;IAGMA,G;AAKJ,eAAYC,IAAZ,EAA0B;AAAA;;AAExB,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,KAAL,GAAaF,IAAb;AACD;AACD;;;;;;;;;;;wBAOIG,O,EAAmB;;AAErB,WAAKF,QAAL,CAAcG,IAAd,CAAmBD,OAAnB;AAED;;AAED;;;;;;;;;;6BAOSE,Q,EAA2B;;AAElC,WAAKJ,QAAL,GAAgB,KAAKA,QAAL,CAAcK,MAAd,CAAqBD,QAArB,CAAhB;AAED;AACD;;;;;;;;;;2BAOOE,G,EAAUC,E,EAAc;;AAE7B,UAAMC,OAAO,SAAPA,IAAO,CAACC,GAAD,EAAMC,IAAN,EAAe;;AAE1B,YAAMC,OAAOL,GAAb;;AAEAG,YAAIG,IAAJ,CAASD,IAAT,EAAeD,IAAf;AACD,OALD;;AAOA,sBAAMG,MAAN,CAAa,KAAKb,QAAlB,EAA4BQ,IAA5B,EAAkCD,GAAGI,IAAH,CAAQL,GAAR,CAAlC;AAED;;;;;;AAGHQ,OAAOC,OAAP,GAAiBjB,GAAjB","file":"ext.js","sourcesContent":["// @flow\r\n\r\n/*!\r\n * hemera\r\n * Copyright(c) 2016 Dustin Deus (deusdustin@gmail.com)\r\n * MIT Licensed\r\n */\r\n\r\nimport Items from 'items'\r\n\r\n/**\r\n * @class Ext\r\n */\r\nclass Ext {\r\n\r\n  _handler: Array<Function>;\r\n  _type: string;\r\n\r\n  constructor(type: string) {\r\n\r\n    this._handler = []\r\n    this._type = type\r\n  }\r\n  /**\r\n   *\r\n   *\r\n   * @param {any} handler\r\n   *\r\n   * @memberOf Ext\r\n   */\r\n  add(handler: Function) {\r\n\r\n    this._handler.push(handler)\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {Array<Function>} handlers\r\n   *\r\n   * @memberOf Ext\r\n   */\r\n  addRange(handlers: Array<Function>) {\r\n\r\n    this._handler = this._handler.concat(handlers)\r\n\r\n  }\r\n  /**\r\n   *\r\n   *\r\n   * @param {any} cb\r\n   *\r\n   * @memberOf Ext\r\n   */\r\n  invoke(ctx: any, cb: Function) {\r\n\r\n    const each = (ext, next) => {\r\n\r\n      const bind = ctx\r\n\r\n      ext.call(bind, next);\r\n    }\r\n\r\n    Items.serial(this._handler, each, cb.bind(ctx))\r\n\r\n  }\r\n}\r\n\r\nmodule.exports = Ext\r\n"]}
{"version":3,"sources":["../lib/extension.js"],"names":["Extension","type","server","_stack","_type","_server","handler","push","handlers","concat","ctx","cb","each","item","next","prevValue","i","response","_response","call","_request","serial","bind","array","method","callback","length","iterate","done","err","value","abort"],"mappings":";;;;;;;;;;AAAA;;;;;;AAMA;;;IAGqBA,S;AAEnB,qBAAaC,IAAb,EAAmBC,MAAnB,EAA2B;AAAA;;AACzB,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,KAAL,GAAaH,IAAb;AACA,SAAKI,OAAL,GAAeH,MAAf;AACD;;AAED;;;;;;;;;;;wBAOKI,O,EAAS;AACZ,WAAKH,MAAL,CAAYI,IAAZ,CAAiBD,OAAjB;AACD;;AAED;;;;;;;;;;6BAOUE,Q,EAAU;AAClB,WAAKL,MAAL,GAAc,KAAKA,MAAL,CAAYM,MAAZ,CAAmBD,QAAnB,CAAd;AACD;AACD;;;;;;;;;;2BAOQE,G,EAAKC,E,EAAI;AAAA;;AACf,UAAMC,OAAO,SAAPA,IAAO,CAACC,IAAD,EAAOC,IAAP,EAAaC,SAAb,EAAwBC,CAAxB,EAA8B;AACzC,YAAI,MAAKX,OAAT,EAAkB;AAChB,cAAMY,WAAWP,IAAIQ,SAArB;AACAD,mBAASH,IAAT,GAAgBA,IAAhB;;AAEAD,eAAKM,IAAL,CAAUT,GAAV,EAAeA,IAAIU,QAAnB,EAA6BH,QAA7B,EAAuCH,IAAvC,EAA6CC,SAA7C,EAAwDC,CAAxD;AACD,SALD,MAKO;AACLH,eAAKM,IAAL,CAAUT,GAAV,EAAeI,IAAf,EAAqBE,CAArB;AACD;AACF,OATD;;AAWAhB,gBAAUqB,MAAV,CAAiB,KAAKlB,MAAtB,EAA8BS,IAA9B,EAAoCD,GAAGW,IAAH,CAAQZ,GAAR,CAApC;AACD;AACD;;;;;;;;;;;;2BASea,K,EAAOC,M,EAAQC,Q,EAAU;AACtC,UAAI,CAACF,MAAMG,MAAX,EAAmB;AACjBD;AACD,OAFD,MAEO;AAAA;AACL,cAAIT,IAAI,CAAR;;AAEA,cAAMW,UAAU,SAAVA,OAAU,CAAUZ,SAAV,EAAqB;AACnC,gBAAMa,OAAO,SAAPA,IAAO,CAAUC,GAAV,EAAeC,KAAf,EAAsBC,KAAtB,EAA6B;AACxC,kBAAIF,GAAJ,EAAS;AACPJ,yBAASI,GAAT;AACD,eAFD,MAEO,IAAIC,SAASC,KAAb,EAAoB;AACzBN,yBAAS,IAAT,EAAeK,KAAf;AACD,eAFM,MAEA;AACLd,oBAAIA,IAAI,CAAR;;AAEA,oBAAIA,IAAIO,MAAMG,MAAd,EAAsB;AACpBC,0BAAQG,KAAR;AACD,iBAFD,MAEO;AACLL,2BAAS,IAAT,EAAeK,KAAf;AACD;AACF;AACF,aAdD;;AAgBAN,mBAAOD,MAAMP,CAAN,CAAP,EAAiBY,IAAjB,EAAuBb,SAAvB,EAAkCC,CAAlC;AACD,WAlBD;;AAoBAW;AAvBK;AAwBN;AACF;;;;;;kBAvFkB3B,S","file":"extension.js","sourcesContent":["/*!\n * hemera\n * Copyright(c) 2016 Dustin Deus (deusdustin@gmail.com)\n * MIT Licensed\n */\n\n/**\n * @class Extension\n */\nexport default class Extension {\n\n  constructor (type, server) {\n    this._stack = []\n    this._type = type\n    this._server = server\n  }\n\n  /**\n   *\n   *\n   * @param {any} handler\n   *\n   * @memberOf Extension\n   */\n  add (handler) {\n    this._stack.push(handler)\n  }\n\n  /**\n   *\n   *\n   * @param {Array<Function>} handlers\n   *\n   * @memberOf Extension\n   */\n  addRange (handlers) {\n    this._stack = this._stack.concat(handlers)\n  }\n  /**\n   *\n   *\n   * @param {any} cb\n   *\n   * @memberOf Extension\n   */\n  invoke (ctx, cb) {\n    const each = (item, next, prevValue, i) => {\n      if (this._server) {\n        const response = ctx._response\n        response.next = next\n\n        item.call(ctx, ctx._request, response, next, prevValue, i)\n      } else {\n        item.call(ctx, next, i)\n      }\n    }\n\n    Extension.serial(this._stack, each, cb.bind(ctx))\n  }\n  /**\n   *\n   *\n   * @param {Array<Function>} array\n   * @param {Function} method\n   * @param {Function} callback\n   *\n   * @memberOf Extension\n   */\n  static serial (array, method, callback) {\n    if (!array.length) {\n      callback()\n    } else {\n      let i = 0\n\n      const iterate = function (prevValue) {\n        const done = function (err, value, abort) {\n          if (err) {\n            callback(err)\n          } else if (value && abort) {\n            callback(null, value)\n          } else {\n            i = i + 1\n\n            if (i < array.length) {\n              iterate(value)\n            } else {\n              callback(null, value)\n            }\n          }\n        }\n\n        method(array[i], done, prevValue, i)\n      }\n\n      iterate()\n    }\n  }\n}\n"]}
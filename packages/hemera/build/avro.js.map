{"version":3,"sources":["../lib/avro.js"],"names":["schema","name","type","fields","default","symbols","values","module","exports"],"mappings":";;AAAA,IAAIA,SAAS;AACXC,QAAM,QADK;AAEXC,QAAM,QAFK;AAGXC,UAAQ,CAAC;AACPF,UAAM,OADC;AAEPC,UAAM;AACJD,YAAM,OADF;AAEJC,YAAM,QAFF;AAGJC,cAAQ,CAAC;AACPF,cAAM,SADC;AAEPC,cAAM,QAFC;AAGPE,iBAAS;AAHF,OAAD,EAKR;AACEH,cAAM,QADR;AAEEC,cAAM,QAFR;AAGE,mBAAW;AAHb,OALQ,EAUR;AACED,cAAM,WADR;AAEEC,cAAM,MAFR;AAGEE,iBAAS;AAHX,OAVQ,EAeR;AACEH,cAAM,SADR;AAEEC,cAAM,QAFR;AAGEE,iBAAS;AAHX,OAfQ,EAoBR;AACEH,cAAM,QADR;AAEEC,cAAM,QAFR;AAGEE,iBAAS;AAHX,OApBQ,EAyBR;AACEH,cAAM,UADR;AAEEC,cAAM,MAFR;AAGEE,iBAAS;AAHX,OAzBQ;AAHJ;AAFC,GAAD,EAqCL;AACDH,UAAM,SADL;AAEDC,UAAM;AACJD,YAAM,SADF;AAEJC,YAAM,QAFF;AAGJC,cAAQ,CAAC;AACPF,cAAM,IADC;AAEPC,cAAM,QAFC;AAGPE,iBAAS;AAHF,OAAD,EAKR;AACEH,cAAM,UADR;AAEEC,cAAM,QAFR;AAGE,mBAAW;AAHb,OALQ,EAUR;AACED,cAAM,WADR;AAEEC,cAAM,MAFR;AAGEE,iBAAS;AAHX,OAVQ,EAeR;AACEH,cAAM,UADR;AAEEC,cAAM,MAFR;AAGEE,iBAAS;AAHX,OAfQ,EAoBR;AACEH,cAAM,MADR;AAEEC,cAAM;AACJD,gBAAM,MADF;AAEJC,gBAAM,MAFF;AAGJG,mBAAS,CAAC,SAAD,EAAY,QAAZ;AAHL,SAFR;AAOED,iBAAS;AAPX,OApBQ;AAHJ;AAFL,GArCK,EAyEH;AACDH,UAAM,QADL;AAEDC,UAAM,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,CAFL;AAGDE,aAAS;AAHR,GAzEG,EA8ER;AACEH,UAAM,OADR;AAEEG,aAAS,EAFX;AAGEF,UAAM,CAAC;AACLD,YAAM,OADD;AAELC,YAAM,QAFD;AAGLC,cAAQ,CAAC;AACPF,cAAM,MADC;AAEPC,cAAM,QAFC;AAGPE,iBAAS;AAHF,OAAD,EAKR;AACEH,cAAM,MADR;AAEEC,cAAM,KAFR;AAGEE,iBAAS,CAAC;AAHZ,OALQ,EAUR;AACEH,cAAM,SADR;AAEEC,cAAM,QAFR;AAGEE,iBAAS;AAHX,OAVQ,EAeR,EAAEH,MAAM,OAAR,EAAiBC,MAAM,CAAC,MAAD,EAAS,OAAT,CAAvB,EAA0CE,SAAS,IAAnD,EAfQ;AAHH,KAAD,EAoBJ,MApBI;AAHR,GA9EQ,EAsGL;AACDH,UAAM,MADL;AAEDG,aAAS,EAFR;AAGDF,UAAM,CAAC;AACLA,YAAM,KADD;AAELI,cAAQ,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB;AAFH,KAAD;AAHL,GAtGK,EA8GR;AACEL,UAAM,SADR;AAEEG,aAAS,EAFX;AAGEF,UAAM,CAAC;AACLA,YAAM,KADD;AAELI,cAAQ,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB;AAFH,KAAD;AAHR,GA9GQ,EAsHR;AACEL,UAAM,UADR;AAEEG,aAAS,EAFX;AAGEF,UAAM,CAAC;AACLA,YAAM,KADD;AAELI,cAAQ,CAAC,QAAD,EAAW,SAAX,EAAsB,QAAtB;AAFH,KAAD;AAHR,GAtHQ;AAHG,CAAb;;AAoIAC,OAAOC,OAAP,GAAiBR,MAAjB","file":"avro.js","sourcesContent":["let schema = {\n  name: 'Packet',\n  type: 'record',\n  fields: [{\n    name: 'trace',\n    type: {\n      name: 'Trace',\n      type: 'record',\n      fields: [{\n        name: 'traceId',\n        type: 'string',\n        default: ''\n      },\n      {\n        name: 'spanId',\n        type: 'string',\n        'default': ''\n      },\n      {\n        name: 'timestamp',\n        type: 'long',\n        default: 0\n      },\n      {\n        name: 'service',\n        type: 'string',\n        default: ''\n      },\n      {\n        name: 'method',\n        type: 'string',\n        default: ''\n      },\n      {\n        name: 'duration',\n        type: 'long',\n        default: 0\n      }\n      ]\n    }\n  }, {\n    name: 'request',\n    type: {\n      name: 'Request',\n      type: 'record',\n      fields: [{\n        name: 'id',\n        type: 'string',\n        default: ''\n      },\n      {\n        name: 'parentId',\n        type: 'string',\n        'default': ''\n      },\n      {\n        name: 'timestamp',\n        type: 'long',\n        default: 0\n      },\n      {\n        name: 'duration',\n        type: 'long',\n        default: 0\n      },\n      {\n        name: 'type',\n        type: {\n          name: 'Type',\n          type: 'enum',\n          symbols: ['request', 'pubsub']\n        },\n        default: 'request'\n      }\n      ]\n    }\n    }, {\n      name: 'result',\n      type: ['bytes', 'string', 'int'],\n      default: ''\n  },\n  {\n    name: 'error',\n    default: {},\n    type: [{\n      name: 'Error',\n      type: 'record',\n      fields: [{\n        name: 'name',\n        type: 'string',\n        default: ''\n      },\n      {\n        name: 'code',\n        type: 'int',\n        default: -1\n      },\n      {\n        name: 'message',\n        type: 'string',\n        default: ''\n      },\n      { name: 'cause', type: ['null', 'Error'], default: null }\n      ]\n    },'null']\n  }, {\n    name: 'meta',\n    default: {},\n    type: [{\n      type: 'map',\n      values: ['string', 'boolean', 'double']\n    }],\n  },\n  {\n    name: 'pattern',\n    default: {},\n    type: [{\n      type: 'map',\n      values: ['string', 'boolean', 'double']\n    }],\n  },\n  {\n    name: 'delegate',\n    default: {},\n    type: [{\n      type: 'map',\n      values: ['string', 'boolean', 'double']\n    }]\n  }\n  ]\n}\n\nmodule.exports = schema\n"]}
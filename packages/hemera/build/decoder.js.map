{"version":3,"sources":["../lib/decoder.js"],"names":["Decoder","msg","Parse","data","error","value","JSON","parse"],"mappings":";;;;;;;;;;AAAA;;;;;;;IAOqBA,O;;;;;;;2BAELC,G,EAAK;;AAEjB,aAAOC,MAAMD,GAAN,CAAP;AACD;;;;;;kBALkBD,O;;;AAQrB,SAASE,KAAT,CAAeC,IAAf,EAAqB;;AAEnB,MAAI,EAAE,gBAAgBD,KAAlB,CAAJ,EAA8B;AAC5B,WAAO,IAAIA,KAAJ,CAAUC,IAAV,CAAP;AACD;;AAED,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,KAAL,GAAa,IAAb;;AAEA,MAAI;;AAEF,SAAKA,KAAL,GAAaC,KAAKC,KAAL,CAAWJ,IAAX,CAAb;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;;AAEd,SAAKA,KAAL,GAAaA,KAAb;AACD;AACF","file":"decoder.js","sourcesContent":["/*!\n * hemera\n * Copyright(c) 2016 Dustin Deus (deusdustin@gmail.com)\n * MIT Licensed\n * Based on https://github.com/mcollina/fast-json-parse\n */\n\nexport default class Decoder {\n\n  static decode(msg) {\n\n    return Parse(msg)\n  }\n}\n\nfunction Parse(data) {\n\n  if (!(this instanceof Parse)) {\n    return new Parse(data)\n  }\n\n  this.error = null\n  this.value = null\n\n  try {\n\n    this.value = JSON.parse(data)\n  } catch (error) {\n\n    this.error = error\n  }\n}\n"]}
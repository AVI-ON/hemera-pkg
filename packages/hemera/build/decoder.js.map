{"version":3,"sources":["../lib/decoder.js"],"names":["Decoder","msg","Parse","data","error","value","JSON","parse","module","exports"],"mappings":";;;;;;AAAA;;;;;;;IAOMA,O;;;;;;;2BAEUC,G,EAAK;;AAEjB,aAAOC,MAAMD,GAAN,CAAP;AACD;;;;;;AAGH,SAASC,KAAT,CAAeC,IAAf,EAAqB;;AAEnB,MAAI,EAAE,gBAAgBD,KAAlB,CAAJ,EAA8B;AAC5B,WAAO,IAAIA,KAAJ,CAAUC,IAAV,CAAP;AACD;;AAED,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,KAAL,GAAa,IAAb;;AAEA,MAAI;;AAEF,SAAKA,KAAL,GAAaC,KAAKC,KAAL,CAAWJ,IAAX,CAAb;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;;AAEd,SAAKA,KAAL,GAAaA,KAAb;AACD;AACF;;AAEDI,OAAOC,OAAP,GAAiBT,OAAjB","file":"decoder.js","sourcesContent":["/*!\r\n * hemera\r\n * Copyright(c) 2016 Dustin Deus (deusdustin@gmail.com)\r\n * MIT Licensed\r\n * Based on https://github.com/mcollina/fast-json-parse\r\n */\r\n\r\nclass Decoder {\r\n\r\n  static decode(msg) {\r\n\r\n    return Parse(msg)\r\n  }\r\n}\r\n\r\nfunction Parse(data) {\r\n\r\n  if (!(this instanceof Parse)) {\r\n    return new Parse(data)\r\n  }\r\n\r\n  this.error = null\r\n  this.value = null\r\n\r\n  try {\r\n\r\n    this.value = JSON.parse(data)\r\n  } catch (error) {\r\n\r\n    this.error = error\r\n  }\r\n}\r\n\r\nmodule.exports = Decoder\r\n"]}
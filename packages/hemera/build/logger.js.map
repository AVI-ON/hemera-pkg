{"version":3,"sources":["../lib/logger.js"],"names":["Pretty","pretty","defaultConfig","level","levels","Logger","params","self","_config","applyToDefaults","pipe","process","stdout","_logger","name","safe","forEach","that","args","concat","Array","prototype","slice","call","arguments","log","apply","module","exports"],"mappings":";;;;AAEA;;;;;;AAMA;;;;AACA;;;;;;;;AAEA,IAAMA,SAAS,eAAKC,MAAL,EAAf;;AAGA;AACA,IAAIC,gBAAgB;AAClBC,SAAO,QADW;AAElBC,UAAQ,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,OAA1B,EAAmC,OAAnC,EAA4C,OAA5C;AAFU,CAApB;;AAKA;;;;IAGMC,M;AAIJ;;;;;;;AAOA,kBAAYC,MAAZ,EAEG;AAAA;;AAAA;;AAED,QAAIC,OAAO,IAAX;;AAEAA,SAAKC,OAAL,GAAe,eAAKC,eAAL,CAAqBP,aAArB,EAAoCI,UAAU,EAA9C,CAAf;;AAEA;AACA,QAAI,KAAKE,OAAL,CAAaL,KAAb,KAAuB,QAA3B,EAAqC;AACnCH,aAAOU,IAAP,CAAYC,QAAQC,MAApB;AACD;;AAED,SAAKC,OAAL,GAAe,oBAAK;AAClBC,YAAM,KADY;AAElBC,YAAM,IAFY;AAGlBZ,aAAO,KAAKK,OAAL,CAAaL;AAHF,KAAL,EAIZH,MAJY,CAAf;;AAMA;AACAO,SAAKC,OAAL,CAAaJ,MAAb,CAAoBY,OAApB,CAA4B,UAACb,KAAD,EAAW;;AAErC,UAAIc,YAAJ;;AAIAA,WAAKd,KAAL,IAAc,YAAY;;AAExB,YAAIe,OAAO,CAACf,KAAD,EAAQgB,MAAR,CAAeC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAf,CAAX;AACAjB,aAAKkB,GAAL,CAASC,KAAT,CAAenB,IAAf,EAAqBW,IAArB;AACD,OAJD;AAKD,KAXD;AAaD;;AAED;;;;;;;0BAGM;;AAEJ,WAAKL,OAAL,CAAaW,UAAU,CAAV,CAAb,EAA2BE,KAA3B,CAAiC,KAAKb,OAAtC,EACEO,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsCF,KAAtC,CAA4C,CAA5C,CADF;AAED;;;;;;AAGHK,OAAOC,OAAP,GAAiBvB,MAAjB","file":"logger.js","sourcesContent":["// @flow\n\n/*!\n * hemera\n * Copyright(c) 2016 Dustin Deus (deusdustin@gmail.com)\n * MIT Licensed\n */\n\nimport Hoek from 'hoek'\nimport Pino from 'pino'\n\nconst Pretty = Pino.pretty()\n\n\n//Config\nlet defaultConfig = {\n  level: 'silent',\n  levels: ['info', 'warn', 'debug', 'trace', 'error', 'fatal']\n}\n\n/**\n * @class Logger\n */\nclass Logger {\n\n  _config: any;\n  _logger: any;\n  /**\n   * Creates an instance of Logger.\n   *\n   * @param {any} params\n   *\n   * @memberOf Logger\n   */\n  constructor(params: {\n    level: string\n  }) {\n\n    let self = this\n\n    self._config = Hoek.applyToDefaults(defaultConfig, params || {})\n\n    //Leads to too much listeners in tests\n    if (this._config.level !== 'silent') {\n      Pretty.pipe(process.stdout)\n    }\n\n    this._logger = Pino({\n      name: 'app',\n      safe: true,\n      level: this._config.level\n    }, Pretty)\n\n    //Set levels, create new prototype methods\n    self._config.levels.forEach((level) => {\n\n      let that: {\n        [id: string]: Function\n      } = this\n\n      that[level] = function () {\n\n        let args = [level].concat(Array.prototype.slice.call(arguments))\n        self.log.apply(self, args)\n      }\n    })\n\n  }\n\n  /**\n   * @memberOf Logger\n   */\n  log() {\n\n    this._logger[arguments[0]].apply(this._logger,\n      Array.prototype.slice.call(arguments).slice(1))\n  }\n}\n\nmodule.exports = Logger\n"]}
{"version":3,"sources":["../lib/index.js"],"names":["defaultConfig","timeout","debug","crashOnFatal","logLevel","load","sampleInterval","Hemera","transport","params","_config","applyToDefaults","_catalog","_heavy","_transport","_topics","_exposition","context$","meta$","delegate$","plugin$","options","payloadValidator","attributes","name","trace$","request$","duration","parentId","timestamp","type","id","_plugins","core","_encoder","encode","_decoder","decode","_extensions","onClientPreRequest","onClientPostRequest","onServerPreHandler","onServerPreRequest","onServerPreResponse","start","addRange","log","logger","level","key","object","pluginName","handler","error","HemeraError","INVALID_EXTENSION_TYPE","add","PLUGIN_ALREADY_IN_USE","plugin","ctx","createContext","dependencies","call","info","PLUGIN_ADDED","value","close","process","exit","cb","on","TRANSPORT_CONNECTED","isFunction","apply","arguments","publish","request","result","_response","message","meta","trace","Error","toObject","endTime","nowHrTime","m","_message","self","invoke","err","_buildMessage","EXTENSION_ERROR","causedBy","_shouldCrash","_replyTo","send","fatal","topic","subToMany","maxMessages","replyTo","_request","_pattern","_actMeta","finish","requestType","pattern","lookup","action","bind","resp","BusinessError","IMPLEMENTATION_ERROR","ImplementationError","PATTERN_NOT_FOUND","PatternNotFound","subscribe","max","hasCallback","NO_TOPIC_TO_SUBSCRIBE","MISSING_IMPLEMENTATION","origPattern","cloneDeep","schema","each","v","k","isObject","clone","cleanPattern","actMeta","PATTERN_ALREADY_IN_USE","ADD_ADDED","pubsub$","maxMessages$","NO_TOPIC_TO_REQUEST","_prevContext","_cleanPattern","onPreRequest","PUB_CALLBACK_REDUNDANT","sid","sendRequest","response","ParseError","PAYLOAD_PARSING_ERROR","responseError","fromObject","responseErrorCause","cause","BUSINESS_ERROR","FatalError","FATAL_ERROR","handleTimeout","timeout$","TimeoutError","ACT_TIMEOUT_ERROR","Object","create","list","stop","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["// @flow\n\n/*!\n * hemera\n * Copyright(c) 2016 Dustin Deus (deusdustin@gmail.com)\n * MIT Licensed\n */\n\n/**\n * Module Dependencies\n */\n\nimport EventEmitter from 'events'\nimport Bloomrun from 'bloomrun'\nimport Errio from 'errio'\nimport Hoek from 'hoek'\nimport Heavy from 'heavy'\nimport _ from 'lodash'\n\nimport Errors from './errors'\nimport Constants from './constants'\nimport Ext from './ext'\nimport Util from './util'\nimport DefaultExtensions from './extensions'\nimport DefaultEncoder from './encoder'\nimport DefaultDecoder from './decoder'\nimport DefaultLogger from './logger'\n\n// config\nvar defaultConfig: Config = {\n  timeout: 2000,\n  debug: false,\n  crashOnFatal: true,\n  logLevel: 'silent',\n  load: {\n    sampleInterval: 0\n  }\n}\n\n/**\n * @class Hemera\n */\nclass Hemera extends EventEmitter {\n\n  context$: Context;\n  meta$: Meta;\n  delegate$: Delegate;\n  plugin$: Plugin;\n  trace$: Trace;\n  request$: Request;\n\n  log: any;\n\n  _config: Config;\n  _catalog: any;\n  _heavy: any;\n  _transport: Nats;\n  _topics: {\n    [id: string]: boolean\n  };\n  _plugins: {\n    [id: string]: Plugin\n  };\n\n  _exposition: any;\n  _extensions: {\n    [id: string]: Ext\n  };\n  _shouldCrash: boolean;\n  _replyTo: string;\n  _request: any;\n  _response: any;\n  _pattern: any;\n  _actMeta: any;\n  _prevContext: Hemera;\n  _cleanPattern: any;\n  _message: any;\n\n  _encoder: Encoder;\n  _decoder: Decoder;\n\n  constructor(transport: Nats, params: Config) {\n\n    super()\n\n    this._config = Hoek.applyToDefaults(defaultConfig, params || {})\n    this._catalog = Bloomrun()\n    this._heavy = new Heavy(this._config.load)\n    this._transport = transport\n    this._topics = {}\n    this._exposition = {}\n\n    // special variables for new execution context\n    this.context$ = {}\n    this.meta$ = {}\n    this.delegate$ = {}\n    this.plugin$ = {\n      options: {\n        payloadValidator: ''\n      },\n      attributes: {\n        name: 'core'\n      }\n    }\n    this.trace$ = {}\n    this.request$ = {\n      duration: 0,\n      parentId: '',\n      timestamp: 0,\n      type: 'request',\n      id: ''\n    }\n\n    this._plugins = {\n      core: this.plugin$.attributes\n    }\n\n    this._encoder = {\n      encode: DefaultEncoder.encode\n    }\n    this._decoder = {\n      decode: DefaultDecoder.decode\n    }\n\n    // define extension points\n    this._extensions = {\n      onClientPreRequest: new Ext('onClientPreRequest'),\n      onClientPostRequest: new Ext('onClientPostRequest'),\n      onServerPreHandler: new Ext('onServerPreHandler'),\n      onServerPreRequest: new Ext('onServerPreRequest'),\n      onServerPreResponse: new Ext('onServerPreResponse')\n    }\n\n    this._heavy.start()\n\n    /**\n     * Will be executed before the client request is executed.\n     */\n    this._extensions.onClientPreRequest.addRange(DefaultExtensions.onClientPreRequest)\n\n    /**\n     * Will be executed after the client received and decoded the request.\n     */\n    this._extensions.onClientPostRequest.addRange(DefaultExtensions.onClientPostRequest)\n\n    /**\n     * Will be executed before the server received the request.\n     */\n    this._extensions.onServerPreRequest.addRange(DefaultExtensions.onServerPreRequest)\n\n    /**\n     * Will be executed before the server action is executed.\n     */\n    this._extensions.onServerPreHandler.addRange(DefaultExtensions.onServerPreHandler)\n\n    /**\n     * Will be executed before the server reply the response and build the message.\n     */\n    this._extensions.onServerPreResponse.addRange(DefaultExtensions.onServerPreResponse)\n\n    this.log = this._config.logger || new DefaultLogger({\n      level: this._config.logLevel\n    })\n  }\n\n  /**\n   * @readonly\n   *\n   * @memberOf Hemera\n   */\n  get plugins(): {\n    [id: string]: any\n  } {\n\n    return this._plugins\n  }\n\n  /**\n   * @readonly\n   *\n   * @memberOf Hemera\n   */\n  get catalog(): any {\n\n    return this._catalog\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   *\n   * @memberOf Hemera\n   */\n  get load(): any {\n\n    return this._heavy.load\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @type {Exposition}\n   * @memberOf Hemera\n   */\n  get exposition(): any {\n\n    return this._exposition\n  }\n\n  /**\n   *\n   *\n   * @param {string} key\n   * @param {mixed} object\n   *\n   * @memberOf Hemera\n   */\n  expose(key: string, object: mixed) {\n\n    let pluginName = this.plugin$.attributes.name\n\n    if (!this._exposition[pluginName]) {\n\n      this._exposition[pluginName] = {}\n      this._exposition[pluginName][key] = object\n    } else {\n\n      this._exposition[pluginName][key] = object\n    }\n\n  }\n\n  /**\n   * @readonly\n   *\n   * @memberOf Hemera\n   */\n  get transport(): Nats {\n\n    return this._transport\n  }\n\n  /**\n   * @readonly\n   *\n   * @memberOf Hemera\n   */\n  get topics(): {\n    [id: string]: any\n  } {\n    return this._topics\n  }\n  /**\n   *\n   *\n   * @param {any} type\n   * @param {any} handler\n   *\n   * @memberOf Hemera\n   */\n  ext(type: string, handler: Function): void {\n\n    if (!this._extensions[type]) {\n      let error = new Errors.HemeraError(Constants.INVALID_EXTENSION_TYPE, {\n        type\n      })\n      this.log.error(error)\n      throw (error)\n    }\n\n    this._extensions[type].add(handler)\n\n  }\n  /**\n   * @param {any} plugin\n   *\n   * @memberOf Hemera\n   */\n  use(params: PluginDefinition) {\n\n    if (this._plugins[params.attributes.name]) {\n      let error = new Errors.HemeraError(Constants.PLUGIN_ALREADY_IN_USE, {\n        plugin: params.attributes.name\n      })\n      this.log.error(error)\n      throw (error)\n    }\n\n    // create new execution context\n    let ctx = this.createContext()\n    ctx.plugin$ = {}\n    ctx.plugin$.attributes = params.attributes || {}\n    ctx.plugin$.attributes.dependencies = params.attributes.dependencies || []\n    ctx.plugin$.options = params.options || {}\n    ctx.plugin$.options.payloadValidator = params.options.payloadValidator || ''\n\n    params.plugin.call(ctx, params.options)\n\n    this.log.info(params.attributes.name, Constants.PLUGIN_ADDED)\n    this._plugins[params.attributes.name] = ctx.plugin$.attributes\n\n  }\n\n  /**\n   *\n   *\n   * @param {any} options\n   *\n   * @memberOf Hemera\n   */\n  setOption(key: string, value: any) {\n\n    this.plugin$.options[key] = value\n  }\n\n  /**\n   *\n   *\n   *\n   * @memberOf Hemera\n   */\n  setConfig(key: string, value: any) {\n\n    this._config[key] = value\n  }\n\n  /**\n   * @memberOf Hemera\n   */\n  fatal() {\n\n    this.close()\n\n    process.exit(1)\n  }\n\n  /**\n   * @param {any} cb\n   *\n   * @memberOf Hemera\n   */\n  ready(cb: Function) {\n\n    this._transport.on('connect', () => {\n\n      this.log.info(Constants.TRANSPORT_CONNECTED)\n\n      if (_.isFunction(cb)) {\n        cb.call(this)\n      }\n\n    })\n  }\n\n  /**\n   *\n   * @returns\n   *\n   * @memberOf Hemera\n   */\n  timeout() {\n\n    return this.transport.timeout.apply(this.transport, arguments)\n  }\n  /**\n   * Add response\n   *\n   * @returns\n   *\n   * @memberOf Hemera\n   */\n  send() {\n\n    return this.transport.publish.apply(this.transport, arguments)\n  }\n\n  /**\n   * Act\n   *\n   * @returns\n   *\n   * @memberOf Hemera\n   */\n  sendRequest() {\n\n    return this.transport.request.apply(this.transport, arguments)\n  }\n\n  /**\n   *\n   *\n   *\n   * @memberOf Hemera\n   */\n  _buildMessage() {\n\n    let result: Response = this._response\n\n    let message: Message = {\n      meta: this.meta$ || {},\n      trace: this.trace$ || {},\n      request: this.request$,\n      result: result instanceof Error ? null : result,\n      error: result instanceof Error ? Errio.toObject(result) : null\n    }\n\n    let endTime: number = Util.nowHrTime()\n    message.request.duration = endTime - message.request.timestamp\n    message.trace.duration = endTime - message.request.timestamp\n\n    let m = this._encoder.encode.call(this, message)\n\n    // attach encoding issues\n    if (m.error) {\n\n      message.error = Errio.toObject(m.error)\n      message.result = null\n    }\n\n    this._message = m.value\n\n  }\n  /**\n   *\n   *\n   *\n   * @memberOf Hemera\n   */\n  finish() {\n\n    let self: Hemera = this;\n\n    self._extensions.onServerPreResponse.invoke(self, function (err) {\n\n      // check if an error was already catched\n      if (self._response instanceof Error) {\n\n        self.log.error(self._response)\n        self._buildMessage()\n      }\n      // check for an extension error\n      else if (err) {\n\n        let error = new Errors.HemeraError(Constants.EXTENSION_ERROR).causedBy(err)\n        self._response = error\n        self.log.error(self._response)\n        self._buildMessage()\n      } else {\n\n        self._buildMessage()\n      }\n\n      // indicates that an error occurs and that the program should exit\n      if (self._shouldCrash) {\n\n        if (self._replyTo) {\n\n          // send error back to callee\n          return self.send(self._replyTo, self._message, () => {\n\n            // let it crash\n            if (self._config.crashOnFatal) {\n\n              self.fatal()\n            }\n          })\n\n        } else if (self._config.crashOnFatal) {\n\n          return self.fatal()\n        }\n\n      }\n\n      if (self._replyTo) {\n\n        return this.send(this._replyTo, self._message)\n      }\n\n    })\n\n  }\n\n  /**\n   * @param {any} topic\n   * @returns\n   *\n   * @memberOf Hemera\n   */\n  subscribe(topic: string, subToMany: boolean, maxMessages: number) {\n\n    let self: Hemera = this\n\n    // avoid duplicate subscribers of the emit stream\n    // we use one subscriber per topic\n    if (self._topics[topic]) {\n      return\n    }\n\n    let handler = (request: any, replyTo: string) => {\n\n      // create new execution context\n      let ctx = this.createContext()\n      ctx._shouldCrash = false\n      ctx._replyTo = replyTo\n      ctx._request = request\n      ctx._pattern = {}\n      ctx._actMeta = {}\n\n      //Extension point 'onServerPreRequest'\n      self._extensions.onServerPreRequest.invoke(ctx, function (err) {\n\n        let self: Hemera = this\n\n        if (err) {\n\n          let error = new Errors.HemeraError(Constants.EXTENSION_ERROR).causedBy(err)\n\n          self.log.error(error)\n          self._response = error\n\n          return self.finish()\n        }\n\n        let requestType = self._request.value.request.type\n        self._pattern = self._request.value.pattern\n        self._actMeta = self._catalog.lookup(self._pattern)\n\n        // check if a handler is registered with this pattern\n        if (self._actMeta) {\n\n          self._extensions.onServerPreHandler.invoke(ctx, function (err: Error) {\n\n            if (err) {\n\n              self._response = new Errors.HemeraError(Constants.EXTENSION_ERROR).causedBy(err)\n\n              self.log.error(self._response)\n\n              return self.finish()\n            }\n\n            try {\n\n              let action = self._actMeta.action.bind(self)\n\n              // if request type is 'pubsub' we dont have to answer\n              if (requestType === 'pubsub') {\n\n                action(self._request.value.pattern)\n\n                return self.finish()\n              }\n\n              // call action\n              action(self._request.value.pattern, (err: Error, resp) => {\n\n                if (err) {\n\n                  self._response = new Errors.BusinessError(Constants.IMPLEMENTATION_ERROR, {\n                    pattern: self._pattern\n                  }).causedBy(err)\n\n                  return self.finish()\n                }\n\n                self._response = resp\n\n                self.finish()\n              })\n\n            } catch (err) {\n\n              self._response = new Errors.ImplementationError(Constants.IMPLEMENTATION_ERROR, {\n                pattern: self._pattern\n              }).causedBy(err)\n\n              self._shouldCrash = true\n\n              self.finish()\n            }\n\n          })\n\n        } else {\n\n          self.log.info({\n            topic\n          }, Constants.PATTERN_NOT_FOUND)\n\n          self._response = new Errors.PatternNotFound(Constants.PATTERN_NOT_FOUND, {\n            pattern: self._pattern\n          })\n\n          // send error back to callee\n          self.finish()\n        }\n\n      })\n\n    }\n\n    // standard pubsub with optional max proceed messages\n    if (subToMany) {\n\n      self.transport.subscribe(topic, {\n        max: maxMessages\n      }, handler)\n    } else {\n\n      // queue group names allow load balancing of services\n      self.transport.subscribe(topic, {\n        'queue': 'queue.' + topic,\n        max: maxMessages\n      }, handler)\n    }\n\n    this._topics[topic] = true\n\n  }\n\n  /**\n   * @param {any} pattern\n   * @param {any} cb\n   *\n   * @memberOf Hemera\n   */\n  add(pattern: {\n    [id: string]: any\n  }, cb: Function) {\n\n    let hasCallback = _.isFunction(cb)\n\n    // topic is needed to subscribe on a subject in NATS\n    if (!pattern.topic) {\n\n      let error = new Errors.HemeraError(Constants.NO_TOPIC_TO_SUBSCRIBE, {\n        pattern\n      })\n\n      this.log.error(error)\n      throw (error)\n    }\n\n    if (!hasCallback) {\n\n      let error = new Errors.HemeraError(Constants.MISSING_IMPLEMENTATION, {\n        pattern\n      })\n\n      this.log.error(error)\n      throw (error)\n    }\n\n    let origPattern = _.cloneDeep(pattern)\n\n    let schema = {}\n\n    // remove objects (rules) from pattern and extract scheme\n    _.each(pattern, function (v: string, k: any) {\n\n      if (_.isObject(v)) {\n        schema[k] = _.clone(v)\n        delete origPattern[k]\n      }\n    })\n\n    // remove special $ variables from pattern\n    origPattern = Util.cleanPattern(origPattern)\n\n    // create message object which represent the object behind the matched pattern\n    let actMeta: ActMeta = {\n      schema: schema,\n      pattern: origPattern,\n      action: cb,\n      plugin: this.plugin$\n    }\n\n    let handler = this._catalog.lookup(origPattern)\n\n    // check if pattern is already registered\n    if (handler) {\n\n      let error = new Errors.HemeraError(Constants.PATTERN_ALREADY_IN_USE, {\n        pattern\n      })\n\n      this.log.error(error)\n      throw (error)\n    }\n\n    // add to bloomrun\n    this._catalog.add(origPattern, actMeta)\n\n    this.log.info(origPattern, Constants.ADD_ADDED)\n\n    // subscribe on topic\n    this.subscribe(pattern.topic, pattern.pubsub$, pattern.maxMessages$)\n  }\n\n  /**\n   * @param {any} pattern\n   * @param {any} cb\n   *\n   * @memberOf Hemera\n   */\n  act(pattern: {\n    [id: string]: number\n  }, cb: Function) {\n\n    // topic is needed to subscribe on a subject in NATS\n    if (!pattern.topic) {\n\n      let error = new Errors.HemeraError(Constants.NO_TOPIC_TO_REQUEST, {\n        pattern\n      })\n\n      this.log.error(error)\n      throw (error)\n    }\n\n    // create new execution context\n    let ctx = this.createContext()\n    ctx._pattern = pattern\n    ctx._prevContext = this\n    ctx._cleanPattern = Util.cleanPattern(pattern)\n    ctx._response = {}\n    ctx._request = {}\n\n    ctx._extensions.onClientPreRequest.invoke(ctx, function onPreRequest(err: Error) {\n\n      let self: Hemera = this\n\n      let hasCallback = _.isFunction(cb)\n\n      let m = self._encoder.encode.call(self, self._message)\n\n      // throw encoding issue\n      if (m.error) {\n\n        let error = new Errors.HemeraError(Constants.EXTENSION_ERROR).causedBy(m.error)\n\n        self.log.error(error)\n\n        if (hasCallback) {\n          return cb.call(self, error)\n        }\n\n        return\n      }\n\n      if (err) {\n\n        let error = new Errors.HemeraError(Constants.EXTENSION_ERROR).causedBy(err)\n\n        self.log.error(error)\n\n        if (hasCallback) {\n          return cb.call(self, error)\n        }\n\n        return\n      }\n\n      ctx._request = m.value\n\n      // use simple publish mechanism instead to fire a request\n      if (pattern.pubsub$ === true) {\n\n        if (hasCallback) {\n          self.log.info(Constants.PUB_CALLBACK_REDUNDANT)\n        }\n\n        self.send(pattern.topic, self._request)\n      } else {\n\n        // send request\n        let sid = self.sendRequest(pattern.topic, self._request, (response: any) => {\n\n          self._response = self._decoder.decode.call(ctx, response)\n\n          try {\n\n            // if payload is invalid\n            if (self._response.error) {\n\n              let error = new Errors.ParseError(Constants.PAYLOAD_PARSING_ERROR, {\n                pattern: self._cleanPattern\n              }).causedBy(self._response.error)\n\n              self.log.error(error)\n\n              if (hasCallback) {\n                return cb.call(self, error)\n              }\n            }\n\n            self._extensions.onClientPostRequest.invoke(ctx, function (err: Error) {\n\n              if (err) {\n\n                let error = new Errors.HemeraError(Constants.EXTENSION_ERROR).causedBy(err)\n\n                self.log.error(error)\n\n                if (hasCallback) {\n                  return cb.call(self, error)\n                }\n\n                return\n              }\n\n              if (hasCallback) {\n\n                if (self._response.value.error) {\n\n                  let responseError = Errio.fromObject(self._response.value.error)\n                  let responseErrorCause = responseError.cause\n                  let error = new Errors.BusinessError(Constants.BUSINESS_ERROR, {\n                    pattern: self._cleanPattern\n                  }).causedBy(responseErrorCause ? responseError.cause : responseError)\n\n                  self.log.error(error)\n\n                  return cb.call(self, responseError)\n                }\n\n                cb.apply(self, [null, self._response.value.result])\n              }\n\n            })\n\n          } catch (err) {\n\n            let error = new Errors.FatalError(Constants.FATAL_ERROR, {\n              pattern: self._cleanPattern\n            }).causedBy(err)\n\n            self.log.fatal(error)\n\n            // let it crash\n            if (self._config.crashOnFatal) {\n\n              self.fatal()\n            }\n          }\n        })\n\n        // handle timeout\n        self.handleTimeout(sid, pattern, cb)\n      }\n\n    })\n\n  }\n\n  /**\n   * @param {any} sid\n   * @param {any} pattern\n   * @param {any} cb\n   *\n   * @memberOf Hemera\n   */\n  handleTimeout(sid: number, pattern: {\n    [id: string]: number\n  }, cb: Function) {\n\n    // handle timeout\n    this.timeout(sid, pattern.timeout$ || this._config.timeout, 1, () => {\n\n      let hasCallback = _.isFunction(cb)\n\n      let error = new Errors.TimeoutError(Constants.ACT_TIMEOUT_ERROR, {\n        pattern\n      })\n\n      this.log.error(error)\n\n      if (hasCallback) {\n\n        try {\n\n          cb.call(this, error)\n        } catch (err) {\n\n          let error = new Errors.FatalError(Constants.FATAL_ERROR, {\n            pattern\n          }).causedBy(err)\n\n          this.log.fatal(error)\n\n          // let it crash\n          if (this._config.crashOnFatal) {\n\n            this.fatal()\n          }\n        }\n      }\n    })\n  }\n\n  /**\n   * @returns\n   * OLOO (objects-linked-to-other-objects) is a code style which creates and relates objects directly without the abstraction of classes. OLOO quite naturally * implements [[Prototype]]-based behavior delegation.\n   * More details: {@link https://github.com/getify/You-Dont-Know-JS/blob/master/this%20%26%20object%20prototypes/ch6.md}\n   * @memberOf Hemera\n   */\n  createContext() {\n\n    var self = this\n\n    // create new instance of hemera but with pointer on the previous propertys\n    // so we are able to create a scope per act without lossing the reference to the core api.\n    var ctx: Hemera = Object.create(self)\n\n    return ctx\n  }\n\n  /**\n   * @memberOf Hemera\n   */\n  list(params: any) {\n\n    return this._catalog.list(params)\n  }\n\n  /**\n   * @returns\n   *\n   * @memberOf Hemera\n   */\n  close() {\n\n    this._heavy.stop()\n\n    return this.transport.close()\n  }\n}\n\nmodule.exports = Hemera\n"]}
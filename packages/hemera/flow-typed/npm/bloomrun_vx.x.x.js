// flow-typed signature: 5514e0a5138bbe1b881583ba81797a26
// flow-typed version: <<STUB>>/bloomrun_v3.0.x/flow_v0.37.4

/**
 * This is an autogenerated libdef stub for:
 *
 *   'bloomrun'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the 
 * community by sending a pull request to: 
 * https://github.com/flowtype/flow-typed
 */

declare module 'bloomrun' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'bloomrun/benchmarks/bench2' {
  declare module.exports: any;
}

declare module 'bloomrun/benchmarks/find' {
  declare module.exports: any;
}

declare module 'bloomrun/benchmarks/list' {
  declare module.exports: any;
}

declare module 'bloomrun/bloomrun' {
  declare module.exports: any;
}

declare module 'bloomrun/example' {
  declare module.exports: any;
}

declare module 'bloomrun/lib/bucket' {
  declare module.exports: any;
}

declare module 'bloomrun/lib/deepSort' {
  declare module.exports: any;
}

declare module 'bloomrun/lib/insertionSort' {
  declare module.exports: any;
}

declare module 'bloomrun/lib/iterator' {
  declare module.exports: any;
}

declare module 'bloomrun/lib/match' {
  declare module.exports: any;
}

declare module 'bloomrun/lib/onlyRegex' {
  declare module.exports: any;
}

declare module 'bloomrun/lib/patternSet' {
  declare module.exports: any;
}

declare module 'bloomrun/lib/safeEqual' {
  declare module.exports: any;
}

declare module 'bloomrun/test' {
  declare module.exports: any;
}

// Filename aliases
declare module 'bloomrun/benchmarks/bench2.js' {
  declare module.exports: $Exports<'bloomrun/benchmarks/bench2'>;
}
declare module 'bloomrun/benchmarks/find.js' {
  declare module.exports: $Exports<'bloomrun/benchmarks/find'>;
}
declare module 'bloomrun/benchmarks/list.js' {
  declare module.exports: $Exports<'bloomrun/benchmarks/list'>;
}
declare module 'bloomrun/bloomrun.js' {
  declare module.exports: $Exports<'bloomrun/bloomrun'>;
}
declare module 'bloomrun/example.js' {
  declare module.exports: $Exports<'bloomrun/example'>;
}
declare module 'bloomrun/lib/bucket.js' {
  declare module.exports: $Exports<'bloomrun/lib/bucket'>;
}
declare module 'bloomrun/lib/deepSort.js' {
  declare module.exports: $Exports<'bloomrun/lib/deepSort'>;
}
declare module 'bloomrun/lib/insertionSort.js' {
  declare module.exports: $Exports<'bloomrun/lib/insertionSort'>;
}
declare module 'bloomrun/lib/iterator.js' {
  declare module.exports: $Exports<'bloomrun/lib/iterator'>;
}
declare module 'bloomrun/lib/match.js' {
  declare module.exports: $Exports<'bloomrun/lib/match'>;
}
declare module 'bloomrun/lib/onlyRegex.js' {
  declare module.exports: $Exports<'bloomrun/lib/onlyRegex'>;
}
declare module 'bloomrun/lib/patternSet.js' {
  declare module.exports: $Exports<'bloomrun/lib/patternSet'>;
}
declare module 'bloomrun/lib/safeEqual.js' {
  declare module.exports: $Exports<'bloomrun/lib/safeEqual'>;
}
declare module 'bloomrun/test.js' {
  declare module.exports: $Exports<'bloomrun/test'>;
}
